"use client"

import { notFound } from "next/navigation"
import { Card } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Separator } from "@/components/ui/separator"
import { Button } from "@/components/ui/button"
import { Brain, Calendar, FileText, Home, Download } from "lucide-react"
import Link from "next/link"
import { ChatInterface } from "@/components/chat-interface"
import { getSession } from "@/lib/storage"

interface PageProps {
  params: Promise<{ id: string }>
}

export default async function SessionPage({ params }: PageProps) {
  const { id } = await params

  const sessionData = await getSession(id)

  if (!sessionData) {
    notFound()
  }

  const { analysis, imageUrl, timestamp } = sessionData

  // Parse the analysis text into sections
  const sections = parseAnalysis(analysis)

  return (
    <main className="min-h-screen bg-background">
      {/* Header */}
      <header className="border-b border-border bg-card">
        <div className="mx-auto max-w-5xl px-6 py-6">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <Brain className="h-8 w-8 text-primary" />
              <div>
                <h1 className="text-2xl font-bold text-foreground">Canine Behavioral Evaluation Report</h1>
                <p className="text-sm text-muted-foreground">TherapyForDogs.ai Professional Services</p>
              </div>
            </div>
            <Link href="/">
              <Button variant="outline" size="sm">
                <Home className="mr-2 h-4 w-4" />
                New Session
              </Button>
            </Link>
          </div>
        </div>
      </header>

      <div className="mx-auto max-w-5xl px-6 py-12">
        {/* Session Info */}
        <Card className="mb-8 p-6">
          <div className="flex flex-col gap-6 md:flex-row md:items-start md:gap-8">
            {/* Patient Image */}
            <div className="flex-shrink-0">
              <div className="relative h-48 w-48 overflow-hidden rounded-lg border-2 border-border">
                <img src={imageUrl || "/placeholder.svg"} alt="Patient dog" className="h-full w-full object-cover" />
              </div>
            </div>

            {/* Session Metadata */}
            <div className="flex-1 space-y-4">
              <div>
                <h2 className="text-xl font-semibold text-foreground">Session Information</h2>
                <p className="text-sm text-muted-foreground">Confidential behavioral evaluation</p>
              </div>

              <div className="grid gap-3 sm:grid-cols-2">
                <div className="flex items-center gap-2 text-sm">
                  <Calendar className="h-4 w-4 text-muted-foreground" />
                  <span className="text-muted-foreground">Date:</span>
                  <span className="font-medium text-foreground">{new Date(timestamp).toLocaleDateString()}</span>
                </div>
                <div className="flex items-center gap-2 text-sm">
                  <FileText className="h-4 w-4 text-muted-foreground" />
                  <span className="text-muted-foreground">Session ID:</span>
                  <span className="font-mono text-xs text-foreground">{id.split("_").slice(0, 3).join("_")}</span>
                </div>
              </div>

              <div className="flex gap-2">
                <Badge variant="secondary">AI-Generated</Badge>
                <Badge variant="outline">Confidential</Badge>
              </div>
            </div>
          </div>
        </Card>

        {/* Analysis Report */}
        <Card className="p-8">
          <div className="prose prose-slate max-w-none dark:prose-invert">
            <div className="mb-8 rounded-lg bg-primary/5 p-6">
              <h3 className="mt-0 flex items-center gap-2 text-lg font-semibold text-primary">
                <Brain className="h-5 w-5" />
                Professional Behavioral Evaluation
              </h3>
              <p className="mb-0 text-sm text-muted-foreground">
                The following assessment has been generated by our AI-powered canine behavioral analysis system. All
                findings are confidential and intended for entertainment purposes only.
              </p>
            </div>

            {/* Render parsed sections */}
            {sections.map((section, index) => (
              <div key={index} className="mb-8">
                <h3 className="mb-4 text-xl font-bold text-foreground">{section.title}</h3>
                <div className="space-y-3 text-foreground/90">
                  {section.content.map((item, itemIndex) => (
                    <div key={itemIndex} className="leading-relaxed">
                      {item}
                    </div>
                  ))}
                </div>
                {index < sections.length - 1 && <Separator className="mt-8" />}
              </div>
            ))}
          </div>
        </Card>

        {/* Actions */}
        <div className="mt-8 flex flex-col gap-4 sm:flex-row sm:justify-between">
          <Link href="/">
            <Button variant="outline" size="lg">
              <Home className="mr-2 h-4 w-4" />
              Start New Session
            </Button>
          </Link>
          <Button
            variant="default"
            size="lg"
            onClick={() => {
              window.print()
            }}
          >
            <Download className="mr-2 h-4 w-4" />
            Download Report
          </Button>
        </div>

        {/* Disclaimer */}
        <Card className="mt-8 border-amber-200 bg-amber-50 p-6 dark:border-amber-900 dark:bg-amber-950/20">
          <p className="text-sm text-amber-900 dark:text-amber-200">
            <strong>Disclaimer:</strong> This behavioral evaluation is generated by AI for entertainment purposes only.
            It is not a substitute for professional veterinary care or certified animal behaviorist consultation. If
            your dog has serious behavioral issues, please consult a licensed veterinarian or certified dog trainer.
          </p>
        </Card>
      </div>

      <ChatInterface behavioralReport={analysis} dogImageUrl={imageUrl} />
    </main>
  )
}

// Helper function to parse the analysis text into structured sections
function parseAnalysis(text: string): Array<{ title: string; content: string[] }> {
  const sections: Array<{ title: string; content: string[] }> = []

  // Split by common section headers
  const sectionRegex = /^([A-Z][A-Z\s]+):$/gm
  const parts = text.split(sectionRegex)

  // First part might be intro text
  if (parts[0].trim()) {
    sections.push({
      title: "Overview",
      content: [parts[0].trim()],
    })
  }

  // Process remaining parts (title, content, title, content, ...)
  for (let i = 1; i < parts.length; i += 2) {
    const title = parts[i].trim()
    const content = parts[i + 1]?.trim() || ""

    if (title && content) {
      // Split content by bullet points or line breaks
      const contentLines = content
        .split(/\n+/)
        .map((line) => line.trim())
        .filter((line) => line.length > 0)

      sections.push({
        title,
        content: contentLines,
      })
    }
  }

  // If no sections were parsed, return the whole text as one section
  if (sections.length === 0) {
    sections.push({
      title: "Analysis",
      content: text.split(/\n+/).filter((line) => line.trim().length > 0),
    })
  }

  return sections
}
